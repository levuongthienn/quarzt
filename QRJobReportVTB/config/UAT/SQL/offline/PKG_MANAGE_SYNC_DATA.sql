CREATE OR REPLACE PACKAGE PKG_MANAGE_SYNC_DATA AS 

  /* TODO enter package declarations (types, exceptions, methods etc) here */ 
PROCEDURE PROC_SYNC_DATA_TRANS_REFUND(P_DATE IN VARCHAR);
PROCEDURE PROC_SYNC_DATA_TRANS(P_DATE IN VARCHAR);
PROCEDURE PROC_SYNC_DATA_TRANS_REPORT(P_DATE IN VARCHAR);

END PKG_MANAGE_SYNC_DATA;
/


CREATE OR REPLACE PACKAGE BODY PKG_MANAGE_SYNC_DATA AS

PROCEDURE PROC_SYNC_DATA_TRANS(P_DATE IN VARCHAR)
    IS
    V_NEW_MERCHANT_NAME VARCHAR(20);
    V_OLD_MERCHANT_CODE VARCHAR(20);
    V_NEW_MERCHANT_CODE VARCHAR(20);
    V_FROM_DATE TIMESTAMP;
    V_TO_DATE TIMESTAMP;
    V_COUNT NUMBER;
    MY_CODE VARCHAR(100);
    MY_ERRM VARCHAR(1000);
    V_COUNT_TRANS_DETAIL NUMBER;
    V_ERROR_DESC VARCHAR(500);
    NUMBER_RECORD_LOGS NUMBER;
    V_MASTER_MERCHANT_CODE VARCHAR(10):= '970489';

    CURSOR C IS SELECT DISTINCT L.KEY MERCHANT_ID FROM QR_AUDIT_LOGS@MMSVIETIN24 L WHERE 1=1
                                                                    AND L.STATUS = 1 
                                                                    AND L.TABLE_NAME = 'QR_MERCHANT' 
                                                                    AND L.FIELD_NAME = 'MERCHANT_CODE'
                                                                    AND CREATED_DATE BETWEEN CONVERT_DATE(P_DATE || ' 00:00:00') AND CONVERT_DATE(P_DATE || ' 23:59:59');
	BEGIN
    DBMS_OUTPUT.PUT_LINE('result0: ' || '123');
    SELECT TRUNC((ADD_MONTHS(SYSDATE,-1)),'month'), TRUNC(SYSDATE + 1) INTO V_FROM_DATE, V_TO_DATE FROM DUAL;
    FOR R IN C
        LOOP
            --DBMS_OUTPUT.PUT_LINE('V_COUNT3: ' || V_COUNT);
            DBMS_OUTPUT.PUT_LINE('result1: ' || R.MERCHANT_ID);

            SELECT NEW_VALUE INTO V_NEW_MERCHANT_CODE
            FROM
            (
                SELECT ROW_NUMBER() OVER (PARTITION BY KEY ORDER BY CREATED_DATE DESC) RNO, NEW_VALUE, OLD_CREATED_DATE, CREATED_DATE
                FROM QR_AUDIT_LOGS@MMSVIETIN24 A 
                WHERE  A.KEY = R.MERCHANT_ID AND A.TABLE_NAME = 'QR_MERCHANT' AND A.FIELD_NAME = 'MERCHANT_CODE'
                AND CREATED_DATE BETWEEN CONVERT_DATE(P_DATE || ' 00:00:00') AND CONVERT_DATE(P_DATE || ' 23:59:59')
            ) A
            WHERE RNO = 1;  
            DBMS_OUTPUT.PUT_LINE('V_NEW_MERCHANT_CODE: ' || V_NEW_MERCHANT_CODE);
            SELECT OLD_VALUE INTO V_OLD_MERCHANT_CODE
            FROM
            (
                SELECT ROW_NUMBER() OVER (PARTITION BY KEY ORDER BY CREATED_DATE) RNO, OLD_VALUE, NEW_VALUE, OLD_CREATED_DATE, CREATED_DATE
                FROM QR_AUDIT_LOGS@MMSVIETIN24 A 
                WHERE  A.KEY = R.MERCHANT_ID AND A.TABLE_NAME = 'QR_MERCHANT' AND A.FIELD_NAME = 'MERCHANT_CODE'
                AND CREATED_DATE BETWEEN CONVERT_DATE(P_DATE || ' 00:00:00') AND CONVERT_DATE(P_DATE || ' 23:59:59')
            ) B
            WHERE RNO = 1;   
            DBMS_OUTPUT.PUT_LINE('V_OLD_MERCHANT_CODE: ' || V_OLD_MERCHANT_CODE);
                --1. Transaction
                UPDATE QR_TRANSACTION SET MERCHANT_CODE = V_NEW_MERCHANT_CODE 
                WHERE MERCHANT_CODE = V_OLD_MERCHANT_CODE AND MASTER_MERCHANT_CODE = V_MASTER_MERCHANT_CODE AND LOCAL_DATE BETWEEN V_FROM_DATE AND V_TO_DATE; 
               
               V_COUNT := SQL%ROWCOUNT;
                    
               NUMBER_RECORD_LOGS := INSERT_LOG_COMMON('QR_TRANSACTION',V_COUNT,'Success...!');
               
               V_COUNT:=0;
                    
             --2. Transaction_detail
                UPDATE QR_TRANSACTION_DETAIL SET MERCHANT_CODE = V_NEW_MERCHANT_CODE 
                WHERE MERCHANT_CODE = V_OLD_MERCHANT_CODE 
                AND CREATED_DATE BETWEEN V_FROM_DATE AND V_TO_DATE;
                V_COUNT := SQL%ROWCOUNT;    
                --Update log
                NUMBER_RECORD_LOGS := INSERT_LOG_COMMON('QR_TRANSACTION',V_COUNT, V_NEW_MERCHANT_CODE || 'Success...!');
        END LOOP;
         EXCEPTION
          WHEN OTHERS THEN
            MY_CODE := SQLCODE;
            MY_ERRM := SQLERRM;
            DBMS_OUTPUT.PUT_LINE('Error code ' || MY_CODE || ': ' || MY_ERRM);
            ROLLBACK;
            DBMS_OUTPUT.PUT_LINE('Error code end');
            --Update log
            NUMBER_RECORD_LOGS := INSERT_LOG_COMMON('QR_TRANSACTION',V_COUNT,MY_CODE || ' - ' || MY_ERRM);
            COMMIT; 
	END; 
 
    
PROCEDURE PROC_SYNC_DATA_TRANS_REPORT(P_DATE IN VARCHAR)
    IS
    V_OLD_MERCHANT_CODE VARCHAR(20);
    V_NEW_MERCHANT_CODE VARCHAR(20);
    V_FROM_DATE TIMESTAMP;
    V_TO_DATE TIMESTAMP;
    V_COUNT NUMBER;
    MY_CODE VARCHAR(100);
    MY_ERRM VARCHAR(1000);
    V_COUNT_TRANS_DETAIL NUMBER;
    V_ERROR_DESC VARCHAR(500);
    NUMBER_RECORD_LOGS NUMBER;
    V_MASTER_MERCHANT_CODE VARCHAR(10):= '970489';

    CURSOR C IS SELECT DISTINCT L.KEY MERCHANT_ID FROM QR_AUDIT_LOGS@MMSVIETIN24 L WHERE 1=1
                                                                    AND L.STATUS = 1 
                                                                    AND L.TABLE_NAME = 'QR_MERCHANT' 
                                                                    AND L.FIELD_NAME = 'MERCHANT_CODE'
                                                                    AND CREATED_DATE BETWEEN CONVERT_DATE(P_DATE || ' 00:00:00') AND CONVERT_DATE(P_DATE || ' 23:59:59');
	BEGIN
    DBMS_OUTPUT.PUT_LINE('result0: ' || '123');
    SELECT TRUNC((ADD_MONTHS(SYSDATE,-1)),'month'), TRUNC(SYSDATE + 1) INTO V_FROM_DATE, V_TO_DATE FROM DUAL;
    FOR R IN C
        LOOP
            --DBMS_OUTPUT.PUT_LINE('V_COUNT3: ' || V_COUNT);
            DBMS_OUTPUT.PUT_LINE('result1: ' || R.MERCHANT_ID);

            SELECT NEW_VALUE INTO V_NEW_MERCHANT_CODE
            FROM
            (
                SELECT ROW_NUMBER() OVER (PARTITION BY KEY ORDER BY CREATED_DATE DESC) RNO, NEW_VALUE, OLD_CREATED_DATE, CREATED_DATE
                FROM QR_AUDIT_LOGS@MMSVIETIN24 A 
                WHERE  A.KEY = R.MERCHANT_ID AND A.TABLE_NAME = 'QR_MERCHANT' AND A.FIELD_NAME = 'MERCHANT_CODE'
                AND CREATED_DATE BETWEEN CONVERT_DATE(P_DATE || ' 00:00:00') AND CONVERT_DATE(P_DATE || ' 23:59:59')
            ) A
            WHERE RNO = 1;  
            DBMS_OUTPUT.PUT_LINE('V_NEW_MERCHANT_CODE: ' || V_NEW_MERCHANT_CODE);
            SELECT OLD_VALUE INTO V_OLD_MERCHANT_CODE
            FROM
            (
                SELECT ROW_NUMBER() OVER (PARTITION BY KEY ORDER BY CREATED_DATE) RNO, OLD_VALUE, NEW_VALUE, OLD_CREATED_DATE, CREATED_DATE
                FROM QR_AUDIT_LOGS@MMSVIETIN24 A 
                WHERE  A.KEY = R.MERCHANT_ID AND A.TABLE_NAME = 'QR_MERCHANT' AND A.FIELD_NAME = 'MERCHANT_CODE'
                AND TRUNC(CREATED_DATE) BETWEEN CONVERT_DATE(P_DATE || ' 00:00:00') AND CONVERT_DATE(P_DATE || ' 23:59:59')
            ) B
            WHERE RNO = 1;   
            DBMS_OUTPUT.PUT_LINE('V_OLD_MERCHANT_CODE: ' || V_OLD_MERCHANT_CODE);
    
                SELECT COUNT(*) INTO V_COUNT  FROM QR_TRAN_DETAIL_SUCCESS 
                WHERE MERCHANT_CODE = V_OLD_MERCHANT_CODE 
                AND TRUNC(LOCAL_DATE) BETWEEN V_FROM_DATE AND V_TO_DATE;
               
                UPDATE QR_TRAN_DETAIL_SUCCESS SET MERCHANT_CODE = V_NEW_MERCHANT_CODE 
                WHERE MERCHANT_CODE = V_OLD_MERCHANT_CODE AND MASTER_MERCHANT_CODE = V_MASTER_MERCHANT_CODE AND PAY_DATE BETWEEN V_FROM_DATE AND V_TO_DATE;
                
                V_COUNT:=SQL%ROWCOUNT;
                 
                --Update log
                NUMBER_RECORD_LOGS := INSERT_LOG_COMMON('QR_TRAN_DETAIL_SUCCESS',V_COUNT, V_NEW_MERCHANT_CODE || 'Success...!');
        END LOOP;
        EXCEPTION
          WHEN OTHERS THEN
            MY_CODE := SQLCODE;
            MY_ERRM := SQLERRM;
            DBMS_OUTPUT.PUT_LINE('Error code ' || MY_CODE || ': ' || MY_ERRM);
            ROLLBACK;
            --Update log
            NUMBER_RECORD_LOGS := INSERT_LOG_COMMON('QR_TRAN_DETAIL_SUCCESS',V_COUNT,MY_CODE || ' - ' || MY_ERRM);
            DBMS_OUTPUT.PUT_LINE('Error code end');
            COMMIT; 
	END;
    
    
PROCEDURE PROC_SYNC_DATA_TRANS_REFUND(P_DATE IN VARCHAR)
    IS
    V_OLD_MERCHANT_CODE VARCHAR(20);
    V_NEW_MERCHANT_CODE VARCHAR(20);
    V_FROM_DATE TIMESTAMP;
    V_TO_DATE TIMESTAMP;
    V_COUNT NUMBER;
    MY_CODE VARCHAR(100);
    MY_ERRM VARCHAR(1000);
    V_COUNT_TRANS_DETAIL NUMBER;
    V_ERROR_DESC VARCHAR(500);
    NUMBER_RECORD_LOGS NUMBER;
    V_MASTER_MERCHANT_CODE VARCHAR(10):= '970489';

    CURSOR C IS SELECT DISTINCT L.KEY MERCHANT_ID FROM QR_AUDIT_LOGS@MMSVIETIN24 L WHERE 1=1
--                                                                    AND L.STATUS = 1 
                                                                    AND L.TABLE_NAME = 'QR_MERCHANT' 
                                                                    AND L.FIELD_NAME = 'MERCHANT_CODE'
                                                                    AND CREATED_DATE BETWEEN CONVERT_DATE(P_DATE || ' 00:00:00') AND CONVERT_DATE(P_DATE || ' 23:59:59');
	BEGIN
    SELECT TRUNC((ADD_MONTHS(SYSDATE,-1)),'month'), TRUNC(SYSDATE + 1) INTO V_FROM_DATE, V_TO_DATE FROM DUAL;
    FOR R IN C
        LOOP
            --DBMS_OUTPUT.PUT_LINE('V_COUNT3: ' || V_COUNT);
            DBMS_OUTPUT.PUT_LINE('result1: ' || R.MERCHANT_ID);

            SELECT NEW_VALUE INTO V_NEW_MERCHANT_CODE
            FROM
            (
                SELECT ROW_NUMBER() OVER (PARTITION BY KEY ORDER BY CREATED_DATE DESC) RNO, NEW_VALUE, OLD_CREATED_DATE, CREATED_DATE
                FROM QR_AUDIT_LOGS@MMSVIETIN24 A 
                WHERE  A.KEY = R.MERCHANT_ID AND A.TABLE_NAME = 'QR_MERCHANT' AND A.FIELD_NAME = 'MERCHANT_CODE'
                AND CREATED_DATE BETWEEN CONVERT_DATE(P_DATE || ' 00:00:00') AND CONVERT_DATE(P_DATE || ' 23:59:59')
            ) A
            WHERE RNO = 1;  
            DBMS_OUTPUT.PUT_LINE('V_NEW_MERCHANT_CODE: ' || V_NEW_MERCHANT_CODE);
            SELECT OLD_VALUE INTO V_OLD_MERCHANT_CODE
            FROM
            (
                SELECT ROW_NUMBER() OVER (PARTITION BY KEY ORDER BY CREATED_DATE) RNO, OLD_VALUE, NEW_VALUE, OLD_CREATED_DATE, CREATED_DATE
                FROM QR_AUDIT_LOGS@MMSVIETIN24 A 
                WHERE  A.KEY = R.MERCHANT_ID AND A.TABLE_NAME = 'QR_MERCHANT' AND A.FIELD_NAME = 'MERCHANT_CODE'
                AND CREATED_DATE BETWEEN CONVERT_DATE(P_DATE || ' 00:00:00') AND CONVERT_DATE(P_DATE || ' 23:59:59')
            ) B
            WHERE RNO = 1;   
            DBMS_OUTPUT.PUT_LINE('V_OLD_MERCHANT_CODE: ' || V_OLD_MERCHANT_CODE);
                UPDATE QR_TRANSACTION_REFUND@MMSVIETIN24 SET MERCHANT_CODE = V_NEW_MERCHANT_CODE 
                WHERE MERCHANT_CODE = V_OLD_MERCHANT_CODE AND MASTER_MERCHANT_CODE = V_MASTER_MERCHANT_CODE AND LOCAL_DATE BETWEEN V_FROM_DATE AND V_TO_DATE;
                
--                  DBMS_OUTPUT.PUT_LINE('merchantcode: ' || V_NEW_MERCHANT_CODE || 'v_count:  ' || v_count);
                --Update log
                V_COUNT:=SQL%ROWCOUNT;
                NUMBER_RECORD_LOGS := INSERT_LOG_COMMON('QR_TRANSACTION_REFUND',V_COUNT, V_NEW_MERCHANT_CODE || ': Success...!');
        END LOOP;
        EXCEPTION
          WHEN OTHERS THEN
            MY_CODE := SQLCODE;
            MY_ERRM := SQLERRM;
            DBMS_OUTPUT.PUT_LINE('Error code ' || MY_CODE || ': ' || MY_ERRM);
            ROLLBACK;
            --Update log
            NUMBER_RECORD_LOGS := INSERT_LOG_COMMON('QR_TRANSACTION_REFUND',V_COUNT,MY_CODE || ' - ' || MY_ERRM);
            DBMS_OUTPUT.PUT_LINE('Error code end');
            COMMIT; 
	END;

END PKG_MANAGE_SYNC_DATA;
/
